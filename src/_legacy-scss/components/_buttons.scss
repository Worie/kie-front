%href {
  text-decoration: none;

  &:hover {
    opacity: $clickable-opacity-hover;
  }

  &:active {
    opacity: $clickable-opacity-active;
  }
}

@mixin button-alternate (
  $size: $button-height,
  $background-color: transparent,
  $background-color-hover: $color-white,
  $border-size: $button-border-size,
  $border-color: $color-white,
  $border-color-hover: $border-color,
  $text-color: $color-white,
  $text-color-hover: $color-purple-text
) {
  display: flex;
  align-items: center;
  justify-content: space-around;
  height: $size;
  border: $border-size solid $border-color;
  border-radius: ($size / 2);
  background: $background-color;
  color: $text-color;
  font-size: $font-size-medium;
  text-align: center;

  &:hover {
    border-color: $border-color-hover;
    background: $background-color-hover;
    color: $text-color-hover;
    text-decoration: none;
  }

  &:active {
    opacity: $clickable-opacity-active;

    @extend %transition-scale-down;
  }
}

@mixin button-round ($size: $button-height) {
  @include equal-sizes($size);

  @extend %border-round;
}

.button {
  display: inline-block;
  height: $button-height;
  padding: 0 $button-padding;
  border: $button-border-size solid $color-white;
  border-radius: ($button-height / 2);
  background: transparent;
  color: $color-white;
  font-size: $font-size-medium;
  // This property has to be decreased by double (top and bottom) border size
  // since `box-sizing` property is globally set to `border-box`.
  line-height: ($button-height - ($button-border-size * 2));
  text-align: center;

  @extend %font-montserrat-regular;
  @extend %href;

  &:hover {
    background: $color-white;
    color: $color-purple-text;
    text-decoration: none;
  }

  &:active {
    @extend %transition-scale-down;
  }

  &.cta {
    transition: transform $transition-time linear;
    border-color: $button-color-base;
    background: $button-color-base;
    color: $color-white;

    &[disabled] {
      transform: scale(0.9);
      border-color: $color-grey-bg;
      background: $color-grey-bg;
      color: $color-purple;
    }
  }
}

.scroll-to-top {
  $bottom-gap: ($offset-base / 2);

  display: none;
  transition: bottom $transition-time;
  border: none;
  background: $color-purple;
  color: $color-white;
  z-index: $z-index-overlay;

  @include position(
    $position: fixed,
    $bottom: $bottom-gap,
    $right: $offset-base
  );
  @include equal-sizes(30px);

  @extend %href;

  @media only screen and #{$desktop} {
    display: block;
  }

  &.hidden {
    display: none;
  }

  &.above-footer-legal {
    bottom: ($footer-legal-section-height + $bottom-gap);
  }
}

%cross-close {
  $size: $button-close-size;

  display: flex;
  align-items: center;
  justify-content: center;
  min-width: initial;
  margin-left: auto;
  border: none;
  background: transparent;
  color: $color-green;
  line-height: $size;
  text-align: center;

  @include equal-sizes($size);

  @extend %border-round;

  &:hover {
    background: $button-color-base;
    color: $color-white;
    text-decoration: none;
  }
}

.close-button {
  @extend %cross-close;
}
