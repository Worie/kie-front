.course-details {
  .list {
    $item-max-height: 60px;
    $item-margin-bottom: $offset-base;
    $items-visible: 3;

    max-height: ($item-max-height * $items-visible) + ($item-margin-bottom * ($items-visible - 1));
    overflow-x: hidden;
    overflow-y: scroll;
    transition: max-height 0.7s, margin 0.7s;

    &.collapsed {
      max-height: 0;
      margin-top: 0;
      overflow-y: hidden;
    }

    @media only screen and #{$medium} {
      max-height: 100%;
      overflow-y: visible;
    }
  }

  .dropdown {
    margin-bottom: 20px;
    padding-bottom: 0;
    background-color: $color-grey;
    box-shadow: none;

    @include divider;

    @media only screen and #{$medium} {
      background-color: $color-white;

      @include divider($opacity: 0);
      @include box-shadow;
    }
  }

  .course-details-section-title {
    @extend %dropdown-triangle-up;

    &.collapsed {
      @extend %dropdown-triangle-down;
    }

    &::after {
      @media only screen and #{$medium} {
        display: none;
      }
    }
  }

  .user-photo {
    flex-shrink: 0;
    margin-right: 12px;

    @include equal-sizes(40px);
  }

  .product-description {
    margin-bottom: ($offset-base * 2);
    // This property resets the color set by general `.product-description`
    // class in `_product.scss`.
    background-color: transparent;

    // This is just a horizontal line that visually separates two items/sections.
    @include item-divider();
  }
}

.short-description {
  margin-top: 0;
  font-size: $font-size-desktop-small;

  @extend %font-montserrat-light;
}

.item {
  &:not(:last-of-type) {
    // This is just a horizontal line that visually separates two items/sections.
    @include item-divider;
  }
}

.lessons {
  width: 100%;

  .lessons-section-title {
    margin-bottom: $offset-base;
    font-size: $font-size-desktop-medium;

    @extend %font-montserrat-regular;
  }
}

// The lesson title can be (and it is) used in other places, not only
// in lesson item. That’s why it’s moved here.
.lesson-title {
  margin-top: 0;
  margin-bottom: 25px;
  font-size: $font-size-desktop-small;

  @extend %font-montserrat-regular;
}

.participants-photos-list {
  // Arranges user photos horizontally.
  display: flex;
  margin-bottom: 0;
  padding: 0;
  list-style-type: none;

  .participant-item {
    margin: 0;
  }
}

.lesson-item {
  $watch-button-width: 105px;

  .lesson-header {
    display: flex;
    justify-content: space-between;

    .lesson-title {
      // Add margin to keep space between lesson title and its date when screen
      // width is small.
      margin-right: $offset-base;
      margin-bottom: 12px;
    }
  }

  .short-description {
    @media only screen and #{$medium} {
      // Avoid overlaying text by watch button on medium and larger screens.
      // It’s incremented by base offset value to keep space between them.
      padding-right: $watch-button-width + $offset-base;

      // Avoid necessity of using clearfix when the element is a last child.
      &:not(:last-child) {
        float: left;
      }
    }
  }

  .lesson-cta {
    display: flex;
    flex-direction: column;
    margin-top: 20px;

    @media only screen and #{$medium} {
      margin-top: 5px;
      margin-bottom: 5px;
    }
  }

  .watch-button {
    align-self: flex-end;
    min-width: $watch-button-width;

    @extend %font-montserrat-regular;
  }
}

.course-questions {
  .course-questions-header {
    display: flex;
    align-items: baseline;
    justify-content: space-between;

    .section-title {
      // Just to add a space between the header and the link when screen is
      // smaller.
      margin-right: $offset-base;
      margin-bottom: $offset-base;

      @media only screen and #{$medium} {
        margin-bottom: 20px;
      }
    }

    .course-questions-cta {
      white-space: nowrap;
    }
  }

  .section-title {
    margin: 0;
    line-height: 100%;
  }

  .review {
    margin: 0;
    font-size: $font-size-desktop-small;
    font-weight: 300;
  }

  .user-fullname {
    display: block;
    font-style: normal;
    font-weight: 500;
    line-height: 1.6;
  }

  .see-more {
    margin-top: 20px;
    margin-bottom: 5px;
    float: right;
  }

  @media only screen and #{$medium} {
    margin-bottom: ($offset-base * 2);
  }
}

.question-item {
  .question-wrapper {
    display: flex;
    margin: 0;
  }

  .question-info {
    display: flex;
    flex-direction: column-reverse;
    margin: 0;
  }

  .question-content {
    width: 100%;
  }

  .question-author {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .question {
    margin-top: 0;
    font-weight: 300;
  }
}

.item-date {
  margin: 0;
  color: $color-lightgrey-text;
  font-size: $font-size-desktop-small;
  font-weight: 300;
}

.activity-stream-list {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.activity-stream-item {
  $comment-button-width: 24px;

  position: relative;

  .comment-button {
    display: flex;
    width: $comment-button-width;
    color: $color-green;

    @include position(
      $position: absolute,
      $top: 0,
      $right: $offset-base
    );

    @extend %href;

    .notification {
      $notification-size: 16px;

      display: block;
      position: absolute;
      margin-top: $notification-size;
      margin-left: -5px;
      background-color: $color-red;
      color: $color-white;
      font-size: $font-size-mobile-small;
      line-height: $notification-size;
      text-align: center;

      @include equal-sizes($notification-size);

      @extend %border-round;
    }

    @media only screen and #{$medium} {
      right: 0;
    }
  }

  .message {
    // It was necessary to add padding to avoid overlaying comment button
    // by text on smaller mobile screens. It’s incremented by base offset
    // value to keep space between them. Base offset is multiplied by 2 since
    // the comment button has its own offset from page edge.
    padding-right: $comment-button-width + $offset-base * 2;
  }

  &:not(:last-of-type) {
    padding-bottom: 20px;
  }
}

.participant-item {
  display: flex;
  align-items: center;
  margin: 0;
  margin-bottom: ($offset-base / 2);
}
